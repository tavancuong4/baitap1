{"ast":null,"code":"import _objectSpread from\"D:/cac ngon ngu/ReactJs/baitap1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{FETCH_POSTS_REQUEST,FETCH_POSTS_SUCCESS,FETCH_POSTS_ERROR,RANDOM_ME,RANDOM_MACHINE}from\"../acctionTypes\";var initState={requesting:false,success:false,message:null,data:[],randomMe:{},randomMachine:{}};var DataReducer=function DataReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;console.log({state:state,action:action});switch(action.type){case FETCH_POSTS_REQUEST:return _objectSpread(_objectSpread({},state),{},{requesting:true});case FETCH_POSTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{requesting:false,success:true,data:action.data,randomMe:action.random,randomMachine:{}});case FETCH_POSTS_ERROR:return _objectSpread(_objectSpread({},state),{},{requesting:false,success:false,message:action.message});case RANDOM_ME:var index1=Math.floor(Math.random()*(state.data.length-1));console.log(\"index *********:\",index1);var dataNew=state.data.splice(index1,1);console.log(\"dataNew: *****:\",dataNew);return _objectSpread(_objectSpread({},state),{},{requesting:false,success:true,randomMe:state.data[index1]});case RANDOM_MACHINE:var index2=Math.floor(Math.random()*(state.data.length-1));console.log(\"index *********:\",index2);state.data.splice(index2,1);return _objectSpread(_objectSpread({},state),{},{requesting:false,success:true,randomMachine:state.data[index2]});default:return state;}};export default DataReducer;","map":{"version":3,"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","RANDOM_ME","RANDOM_MACHINE","initState","requesting","success","message","data","randomMe","randomMachine","DataReducer","state","arguments","length","undefined","action","console","log","type","_objectSpread","random","index1","Math","floor","dataNew","splice","index2"],"sources":["D:/cac ngon ngu/ReactJs/baitap1/src/redux/reducer/dataReducer.js"],"sourcesContent":["import {\r\n  FETCH_POSTS_REQUEST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_ERROR,\r\n  RANDOM_ME,\r\n  RANDOM_MACHINE,\r\n} from \"../acctionTypes\";\r\n\r\nconst initState = {\r\n  requesting: false,\r\n  success: false,\r\n  message: null,\r\n  data: [],\r\n  randomMe: {},\r\n  randomMachine: {},\r\n};\r\n\r\nconst DataReducer = (state = initState, action) => {\r\n  console.log({ state, action });\r\n  switch (action.type) {\r\n    case FETCH_POSTS_REQUEST:\r\n      return { ...state, requesting: true };\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        requesting: false,\r\n        success: true,\r\n        data: action.data,\r\n        randomMe: action.random,\r\n        randomMachine: {},\r\n      };\r\n    case FETCH_POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        requesting: false,\r\n        success: false,\r\n        message: action.message,\r\n      };\r\n    case RANDOM_ME:\r\n      let index1 = Math.floor(Math.random() * (state.data.length - 1));\r\n      console.log(\"index *********:\", index1);\r\n      let dataNew = state.data.splice(index1, 1);\r\n      console.log(\"dataNew: *****:\", dataNew);\r\n\r\n      return {\r\n        ...state,\r\n        requesting: false,\r\n        success: true,\r\n        randomMe: state.data[index1],\r\n      };\r\n    case RANDOM_MACHINE:\r\n      let index2 = Math.floor(Math.random() * (state.data.length - 1));\r\n      console.log(\"index *********:\", index2);\r\n      state.data.splice(index2, 1);\r\n      return {\r\n        ...state,\r\n        requesting: false,\r\n        success: true,\r\n        randomMachine: state.data[index2],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default DataReducer;\r\n"],"mappings":"oHAAA,OACEA,mBAAmB,CACnBC,mBAAmB,CACnBC,iBAAiB,CACjBC,SAAS,CACTC,cAAc,KACT,iBAAiB,CAExB,GAAM,CAAAC,SAAS,CAAG,CAChBC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAE,CAAC,CAClB,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAkC,IAA9B,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGT,SAAS,IAAE,CAAAY,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC5CE,OAAO,CAACC,GAAG,CAAC,CAAEN,KAAK,CAALA,KAAK,CAAEI,MAAM,CAANA,MAAO,CAAC,CAAC,CAC9B,OAAQA,MAAM,CAACG,IAAI,EACjB,IAAK,CAAApB,mBAAmB,CACtB,OAAAqB,aAAA,CAAAA,aAAA,IAAYR,KAAK,MAAEP,UAAU,CAAE,IAAI,GACrC,IAAK,CAAAL,mBAAmB,CACtB,OAAAoB,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRP,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,IAAI,CACbE,IAAI,CAAEQ,MAAM,CAACR,IAAI,CACjBC,QAAQ,CAAEO,MAAM,CAACK,MAAM,CACvBX,aAAa,CAAE,CAAC,CAAC,GAErB,IAAK,CAAAT,iBAAiB,CACpB,OAAAmB,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRP,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAES,MAAM,CAACT,OAAO,GAE3B,IAAK,CAAAL,SAAS,CACZ,GAAI,CAAAoB,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,EAAE,EAAIT,KAAK,CAACJ,IAAI,CAACM,MAAM,CAAG,CAAC,CAAC,CAAC,CAChEG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEI,MAAM,CAAC,CACvC,GAAI,CAAAG,OAAO,CAAGb,KAAK,CAACJ,IAAI,CAACkB,MAAM,CAACJ,MAAM,CAAE,CAAC,CAAC,CAC1CL,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEO,OAAO,CAAC,CAEvC,OAAAL,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRP,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,IAAI,CACbG,QAAQ,CAAEG,KAAK,CAACJ,IAAI,CAACc,MAAM,CAAC,GAEhC,IAAK,CAAAnB,cAAc,CACjB,GAAI,CAAAwB,MAAM,CAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,EAAE,EAAIT,KAAK,CAACJ,IAAI,CAACM,MAAM,CAAG,CAAC,CAAC,CAAC,CAChEG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAES,MAAM,CAAC,CACvCf,KAAK,CAACJ,IAAI,CAACkB,MAAM,CAACC,MAAM,CAAE,CAAC,CAAC,CAC5B,OAAAP,aAAA,CAAAA,aAAA,IACKR,KAAK,MACRP,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,IAAI,CACbI,aAAa,CAAEE,KAAK,CAACJ,IAAI,CAACmB,MAAM,CAAC,GAGrC,QACE,MAAO,CAAAf,KAAK,CAAC,CAEnB,CAAC,CACD,cAAe,CAAAD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}