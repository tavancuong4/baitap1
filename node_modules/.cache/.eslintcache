[{"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\index.js":"1","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\reportWebVitals.js":"2","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\App.js":"3","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Component\\Component.js":"4","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise2\\Exercise2.js":"5","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-redux\\Exercise-redux.js":"6","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\Exercise-react-context.js":"7","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\CardMe.js":"8","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\CardMachine.js":"9","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\Count.js":"10","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\acctionTypes.js":"11","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\acction.js":"12","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\store.js":"13","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\rootReducer.js":"14","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\countReducer.js":"15","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\dataReducer.js":"16","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\totalReducer.js":"17","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\count2Reducer.js":"18","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Context\\Context.js":"19","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\services\\callAPI.js":"20"},{"size":870,"mtime":1680704279816,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1680154658746,"results":"23","hashOfConfig":"22"},{"size":975,"mtime":1680766175685,"results":"24","hashOfConfig":"22"},{"size":4496,"mtime":1680760925629,"results":"25","hashOfConfig":"22"},{"size":13068,"mtime":1680771913893,"results":"26","hashOfConfig":"22"},{"size":7061,"mtime":1680762625956,"results":"27","hashOfConfig":"22"},{"size":647,"mtime":1680780282748,"results":"28","hashOfConfig":"22"},{"size":1240,"mtime":1680766046272,"results":"29","hashOfConfig":"22"},{"size":1445,"mtime":1680766054630,"results":"30","hashOfConfig":"22"},{"size":498,"mtime":1680766269391,"results":"31","hashOfConfig":"22"},{"size":515,"mtime":1680750688899,"results":"32","hashOfConfig":"22"},{"size":3943,"mtime":1680760175962,"results":"33","hashOfConfig":"22"},{"size":383,"mtime":1680750323692,"results":"34","hashOfConfig":"22"},{"size":863,"mtime":1680750343119,"results":"35","hashOfConfig":"22"},{"size":398,"mtime":1680667761848,"results":"36","hashOfConfig":"22"},{"size":1630,"mtime":1680766552487,"results":"37","hashOfConfig":"22"},{"size":511,"mtime":1680750623736,"results":"38","hashOfConfig":"22"},{"size":402,"mtime":1680668111085,"results":"39","hashOfConfig":"22"},{"size":4674,"mtime":1680766224846,"results":"40","hashOfConfig":"22"},{"size":512,"mtime":1680760925598,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"2ranyd",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\index.js",["110"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { store } from \"./redux/store\";\n\n// const reduxStore = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   // applyMiddleware(thunk)\n// );\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\reportWebVitals.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\App.js",["111"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Component from \"./views/Component/Component\";\nimport Exercise2 from \"./views/Exercise2/Exercise2\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ExerciseContext from \"./views/Exercise-context/Exercise-react-context\";\nimport ExerciseRedux from \"./views/Exercise-redux/Exercise-redux\";\nimport React from \"react\";\nimport { Context } from \"./views/Context/Context\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Context>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Component />} />\n            <Route path=\"/exercise\" element={<Exercise2 />} />\n            <Route\n              path=\"/exercise-react-context\"\n              element={<ExerciseContext />}\n            />\n            <Route path=\"/exercise-redux\" element={<ExerciseRedux />} />\n          </Routes>\n        </BrowserRouter>\n      </Context>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Component\\Component.js",["112","113"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Component.scss\";\r\n\r\nconst Component = () => {\r\n  const [data, setData] = useState([]);\r\n  const [dataShow, setDataShow] = useState({});\r\n  const [listData, setListData] = useState([]);\r\n  const [total, setTotal] = useState(6);\r\n  const [count, setCount] = useState(1);\r\n  let select = React.createRef();\r\n  useEffect(() => {\r\n    try {\r\n      (async function () {\r\n        let res = await axios.get(\r\n          \"https://run.mocky.io/v3/d03e0886-f5c8-4961-902d-51bfe8059a33\"\r\n        );\r\n        let data = res.data ? res.data : [];\r\n        setData(data);\r\n        setDataShow(data[0]);\r\n        setListData(data.slice(0, total));\r\n\r\n        console.log(\"data:\", data);\r\n        // console.log(\"data Show: \", dataShow);\r\n        console.log(\"list data: \", listData);\r\n      })();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  const handleClick = (item) => {\r\n    setDataShow(item);\r\n  };\r\n  const handlePrev = (e) => {\r\n    e.preventDefault();\r\n    let newCount;\r\n    newCount = count - 1;\r\n    if (newCount === 0) newCount = Math.ceil(data.length / total);\r\n    console.log(\"count: \", count);\r\n    let end = total * newCount;\r\n    setListData(data.slice(end - total, end));\r\n    console.log(\"newCount: \", newCount);\r\n    setCount(newCount);\r\n  };\r\n  const handleNext = (e) => {\r\n    e.preventDefault();\r\n    let newCount;\r\n\r\n    newCount = count + 1;\r\n    if (data.length / total <= count) newCount = 1;\r\n    console.log(\"count: \", count);\r\n    let end = total * newCount;\r\n    setListData(data.slice(end - total, end));\r\n    console.log(\"newCount: \", newCount);\r\n    setCount(newCount);\r\n  };\r\n  const changeGenre = () => {\r\n    console.log(\"value: \", select.current.value);\r\n    let arr = [];\r\n    for (let item in data) {\r\n      // console.log(\"item: \", data[item].Genre);\r\n      let data2 = data[item].Genre;\r\n      // for (let i in data2) {\r\n      //   console.log(\"i\", data2[i]);\r\n      if (data2.includes(select.current.value) === true) {\r\n        arr.push(data[item]);\r\n        // console.log(\"array: \", data[item]);\r\n      }\r\n    }\r\n    setListData(arr);\r\n    if (select.current.value === \"All\") {\r\n      setListData(data);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"body\">\r\n        <div className=\"body-left\">\r\n          <img src={dataShow.Poster} alt=\"\" />\r\n        </div>\r\n        <div className=\"body-right\">\r\n          <div className=\"title\">{dataShow.Title}</div>\r\n          <div className=\"information\">\r\n            <ol>\r\n              <li className=\"actors\">\r\n                <strong>Actors: </strong> {dataShow.Actors}\r\n              </li>\r\n              <li>\r\n                <strong>Genre: </strong> {dataShow.Genre}\r\n              </li>\r\n              <li>\r\n                <strong>Plot: </strong> {dataShow.Plot}\r\n              </li>\r\n              <li>\r\n                <strong>Title: </strong> {dataShow.Title}\r\n              </li>\r\n              <li>\r\n                <strong>Year: </strong> {dataShow.Year}\r\n              </li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\"> \r\n        <div className=\"footer-select\">\r\n          <select ref={select} onChange={changeGenre}>\r\n            <option value=\"All\">Genre All</option>\r\n            <option value=\"Adventure\">Adventure</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Family\">Family</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Crime\">Crime</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"prev\" onClick={(e) => handlePrev(e)}>\r\n          Prev\r\n        </div>\r\n        <div className=\"footer-list\">\r\n          {listData.map((item, index) => {\r\n            return (\r\n              <div className=\"list\" key={index}>\r\n                <div className=\"item\">\r\n                  <img\r\n                    src={item.Poster}\r\n                    alt=\"\"\r\n                    width={{ width: \"100%\" }}\r\n                    onClick={() => handleClick(item)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"next\" onClick={(e) => handleNext(e)}>\r\n          Next\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise2\\Exercise2.js",["114"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport starwars from \"../../image/starwars.png\";\r\nimport \"./Exercise2.scss\";\r\n\r\nconst Exercise2 = () => {\r\n  const [data, setData] = useState([]);\r\n  const [show, setShow] = useState(true);\r\n\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [me, setMe] = useState({});\r\n\r\n  const [count2, setCount2] = useState(0);\r\n  const [machine, setMachine] = useState({});\r\n  useEffect(() => {\r\n    try {\r\n      (async function () {\r\n        let api = \"https://swapi.dev/api/starships\";\r\n        let getData = [];\r\n        do {\r\n          let dataURL = await axios.get(api);\r\n          api = dataURL.data.next;\r\n\r\n          const results = await dataURL.data.results;\r\n          getData = [...getData, ...results];\r\n          setData(getData);\r\n          setLoading(false);\r\n        } while (api);\r\n        let index1 = Math.floor(Math.random() * (getData.length - 1));\r\n        setMe(getData[index1]);\r\n        getData.splice(index1, 1);\r\n      })();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [total === 11]);\r\n\r\n  const onchangeMe = (a, b, me) => {\r\n    if (a > b) {\r\n      setCount(count + 1);\r\n      document.getElementById(\"list1\").style.background = \"Green\";\r\n      document.getElementById(\"list2\").style.background = \"Red\";\r\n      setShow(true);\r\n    } else if (a < b) {\r\n      document.getElementById(\"list2\").style.background = \"Green\";\r\n      document.getElementById(\"list1\").style.background = \"Red\";\r\n      setShow(false);\r\n      setCount2(count2 + 1);\r\n    } else if (\r\n      me.max_atmosphering_speed === \"unknown\" ||\r\n      me.max_atmosphering_speed === \"n/a\" ||\r\n      machine.max_atmosphering_speed === \"unknown\" ||\r\n      machine.max_atmosphering_speed === \"n/a\" ||\r\n      a === b\r\n    ) {\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      setCount(count);\r\n      setCount2(count2);\r\n    }\r\n    console.log(\r\n      \"1:\",\r\n      me.max_atmosphering_speed,\r\n      \"2: \",\r\n      machine.max_atmosphering_speed\r\n    );\r\n    console.log(\"a và b: \", a, b);\r\n    console.log(\"total: \", total);\r\n    if (total === 10 && count > count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      alert(\"You win!\");\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      return;\r\n    } else if (total === 10 && count < count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      alert(\"You lose!\");\r\n      return;\r\n    } else if (total === 10 && count === count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      alert(\"Draw!\");\r\n      return;\r\n    }\r\n  };\r\n  const onchangeMachine = (a, b, machine) => {\r\n    if (a > b) {\r\n      setCount(count + 1);\r\n      document.getElementById(\"list1\").style.background = \"Green\";\r\n      document.getElementById(\"list2\").style.background = \"Red\";\r\n      setShow(true);\r\n    } else if (b > a) {\r\n      setCount2(count2 + 1);\r\n      document.getElementById(\"list2\").style.background = \"Green\";\r\n      document.getElementById(\"list1\").style.background = \"Red\";\r\n      setShow(false);\r\n    } else if (\r\n      me.max_atmosphering_speed === \"unknown\" ||\r\n      me.max_atmosphering_speed === \"n/a\" ||\r\n      machine.max_atmosphering_speed === \"unknown\" ||\r\n      machine.max_atmosphering_speed === \"n/a\" ||\r\n      a === b\r\n    ) {\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      setCount(count);\r\n      setCount2(count2);\r\n    }\r\n    console.log(\r\n      \"1:\",\r\n      me.max_atmosphering_speed,\r\n      \"2: \",\r\n      machine.max_atmosphering_speed\r\n    );\r\n    console.log(\"a và b: \", a, b);\r\n    console.log(\"total: \", total);\r\n    if (total === 10 && count > count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      alert(\"You win!\");\r\n      return;\r\n    } else if (total === 10 && count < count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      alert(\"You lose!\");\r\n      return;\r\n    } else if (total === 10 && count === count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      alert(\"Draw!\");\r\n      return;\r\n    }\r\n  };\r\n  const handleMe = (index1) => {\r\n    setMe(data[index1]);\r\n    data.splice(index1, 1);\r\n    setTotal(total + 1);\r\n    if (total === 10) {\r\n      setTotal(0);\r\n    }\r\n    console.log(\"Me: \", index1, data[index1]);\r\n    // setShowMachine(true);\r\n    // setShowMe(false);\r\n  };\r\n  const handleMachine = (index1) => {\r\n    setMachine(data[index1]);\r\n    data.splice(index1, 1);\r\n    setTotal(total + 1);\r\n    if (total === 10) {\r\n      setTotal(0);\r\n    }\r\n    console.log(\"Machine: \", index1, data[index1]);\r\n  };\r\n  const handleClickMeSpeed = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let me = data[index1];\r\n    let a = parseInt(me.max_atmosphering_speed);\r\n    let b = parseInt(machine.max_atmosphering_speed);\r\n    onchangeMe(a, b, me);\r\n    handleMe(index1);\r\n  };\r\n  const handleClickCredit = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n    let me = data[index1];\r\n    let a = parseInt(me.cost_in_credits);\r\n    let b = parseInt(machine.cost_in_credits);\r\n    onchangeMe(a, b, me);\r\n    handleMe(index1);\r\n  };\r\n  const handleClickPassenger = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let me = data[index1];\r\n    let a = parseInt(me.passengers);\r\n    let b = parseInt(machine.passengers);\r\n    onchangeMe(a, b, me);\r\n    handleMe(index1);\r\n  };\r\n  const handleClickFilm = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let me = data[index1];\r\n    let a = parseInt(me.films?.length);\r\n    let b = parseInt(machine.films?.length);\r\n    onchangeMe(a, b, me);\r\n    handleMe(index1);\r\n  };\r\n\r\n  const handleClickMeSpeed2 = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let machine = data[index1];\r\n    let a = parseInt(me.max_atmosphering_speed);\r\n    let b = parseInt(machine.max_atmosphering_speed);\r\n    onchangeMachine(a, b, machine);\r\n    handleMachine(index1);\r\n  };\r\n  const handleClickCredit2 = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let machine = data[index1];\r\n    let a = parseInt(me.cost_in_credits);\r\n    let b = parseInt(machine.cost_in_credits);\r\n    onchangeMachine(a, b, machine);\r\n    handleMachine(index1);\r\n  };\r\n  const handleClickPassenger2 = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let machine = data[index1];\r\n    let a = parseInt(me.passengers);\r\n    let b = parseInt(machine.passengers);\r\n    onchangeMachine(a, b, machine);\r\n    handleMachine(index1);\r\n  };\r\n  const handleClickFilm2 = async () => {\r\n    const index1 = Math.floor(Math.random() * data.length);\r\n\r\n    let machine = data[index1];\r\n    let a = parseInt(me.films?.length);\r\n    let b = parseInt(machine.films?.length);\r\n    onchangeMachine(a, b, machine);\r\n    handleMachine(index1);\r\n  };\r\n  console.log(\"set Show : >>>> \", show);\r\n  const handleClickReset = () => {\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <div className=\"container2\">\r\n      <div className=\"header-scores\">\r\n        <span>{count}</span>\r\n        <span>total :{total}</span>\r\n        <span>{count2}</span>\r\n      </div>\r\n      {loading === false ? (\r\n        <div className=\"body\">\r\n          <div className=\"body-item\">\r\n            <div className=\"body-title\">SnowsPeeders</div>\r\n            <div className=\"body-image\">\r\n              <img src={starwars} alt=\"\" />\r\n            </div>\r\n            <div className=\"body-list\" id=\"list1\">\r\n              <div className=\"item\" onClick={() => handleClickMeSpeed()}>\r\n                <span>Max Speed</span>\r\n                <span>{show ? me.max_atmosphering_speed : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickCredit()}>\r\n                {\" \"}\r\n                <span>Credit</span>\r\n                <span>{show ? me.cost_in_credits : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickPassenger()}>\r\n                {\" \"}\r\n                <span>Passengers</span>\r\n                <span>{show ? me.passengers : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickFilm()}>\r\n                {\" \"}\r\n                <span>Film Appearances</span>\r\n                <span>{show ? me.films?.length : \"?\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"reset\" onClick={() => handleClickReset()}>\r\n            Reset\r\n          </button>\r\n          <div className=\"body-item\">\r\n            <div className=\"body-title\">Storm Twin cloud car</div>\r\n            <div className=\"body-image\">\r\n              <img src={starwars} alt=\"\" />\r\n            </div>\r\n            <div className=\"body-list\" id=\"list2\">\r\n              <div className=\"item\" onClick={() => handleClickMeSpeed2()}>\r\n                <span>Max Speed</span>\r\n                <span>{show ? \"?\" : machine.max_atmosphering_speed}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickCredit2()}>\r\n                {\" \"}\r\n                <span>Credit</span>\r\n                <span>{show ? \"?\" : machine.cost_in_credits}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickPassenger2()}>\r\n                {\" \"}\r\n                <span>Passengers</span>\r\n                <span>{show ? \"?\" : machine.passengers}</span>\r\n              </div>\r\n              <div className=\"item\" onClick={() => handleClickFilm2()}>\r\n                {\" \"}\r\n                <span>Film Appearances</span>\r\n                <span>{show ? \"?\" : machine.films?.length}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading ..................</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exercise2;\r\n\r\n// useEffect(() => {\r\n//   // const index1 = Math.floor(Math.random() * data.length);\r\n//   // setMe(data[index1]);\r\n//   // console.log(\"Me: \", index1, data[index1]);\r\n//   // data.splice(index1, 1);\r\n//   let a = parseInt(me.max_atmosphering_speed);\r\n//   let b = parseInt(machine.max_atmosphering_speed);\r\n//   if (a > b) {\r\n//     setCount(count + 1);\r\n//     document.getElementById(\"list1\").style.background = \"Green\";\r\n//     document.getElementById(\"list2\").style.background = \"Red\";\r\n//   } else if (a < b) {\r\n//     document.getElementById(\"list2\").style.background = \"Green\";\r\n//     document.getElementById(\"list1\").style.background = \"Red\";\r\n//     setCount2(count2 + 1);\r\n//   } else if (\r\n//     me.max_atmosphering_speed === \"unknown\" ||\r\n//     me.max_atmosphering_speed === \"n/a\" ||\r\n//     machine.max_atmosphering_speed === \"unknown\" ||\r\n//     machine.max_atmosphering_speed === \"n/a\"\r\n//   ) {\r\n//     document.getElementById(\"list2\").style.background = \"White\";\r\n//     document.getElementById(\"list1\").style.background = \"White\";\r\n//     setCount(count);\r\n//     setCount2(count2);\r\n//   }\r\n//   console.log(\r\n//     \"1:\",\r\n//     me.max_atmosphering_speed,\r\n//     \"2: \",\r\n//     machine.max_atmosphering_speed\r\n//   );\r\n//   console.log(\"a và b: \", a, b);\r\n//   console.log(\"total: \", total);\r\n//   if (total === 10 && count > count2) {\r\n//     setCount(0);\r\n//     setCount2(0);\r\n//     setTotal(0);\r\n//     document.getElementById(\"list1\").style.background = \"White\";\r\n//     document.getElementById(\"list2\").style.background = \"White\";\r\n//     return alert(\"You win!\");\r\n//   } else if (total === 10 && count < count2) {\r\n//     setCount(0);\r\n//     setCount2(0);\r\n//     setTotal(0);\r\n//     document.getElementById(\"list2\").style.background = \"White\";\r\n//     document.getElementById(\"list1\").style.background = \"White\";\r\n//     return alert(\"You lose!\");\r\n//   } else if (total === 10 && count === count2) {\r\n//     setCount(0);\r\n//     setCount2(0);\r\n//     setTotal(0);\r\n//     document.getElementById(\"list2\").style.background = \"White\";\r\n//     document.getElementById(\"list1\").style.background = \"White\";\r\n//     return alert(\"Draw!\");\r\n//   }\r\n// }, [me, machine]);\r\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-redux\\Exercise-redux.js",["115","116","117","118","119"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport starwars from \"../../image/starwars.png\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  actAddTotal,\r\n  actDeleteTotal,\r\n  actAddCount,\r\n  actDeleteCount,\r\n  actAddCount2,\r\n  actDeleteCount2,\r\n  fetchData,\r\n  handleRandomMe,\r\n  handleRandomMachine,\r\n  callAPI,\r\n} from \"../../redux/acction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ExerciseRedux = (props) => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.datas.data);\r\n  const requesting = useSelector((state) => state.datas.requesting);\r\n  const me = useSelector((state) => state.datas.randomMe);\r\n  const machine = useSelector((state) => state.datas.randomMachine);\r\n\r\n  const total = useSelector((state) => state.total.total);\r\n  const count = useSelector((state) => state.count.count);\r\n  const count2 = useSelector((state) => state.count2.count);\r\n  console.log(\"cuong chi1: \", data);\r\n  console.log(\"total chi1: \", total);\r\n  console.log(\"count chi1: \", count);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(fetchData());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  const handleClickMe = () => {\r\n    dispatch(handleRandomMe());\r\n    dispatch(actAddTotal());\r\n  };\r\n  const handleClickMachine = () => {\r\n    dispatch(handleRandomMachine());\r\n    dispatch(actAddTotal());\r\n    setShow(true);\r\n  };\r\n  const handleClickShow = () => {\r\n    setShow(!show);\r\n  };\r\n  useEffect(() => {\r\n    let a = parseInt(me.max_atmosphering_speed);\r\n    let b = parseInt(machine.max_atmosphering_speed);\r\n    if (a > b) {\r\n      dispatch(actAddCount());\r\n      document.getElementById(\"list1\").style.background = \"Green\";\r\n      document.getElementById(\"list2\").style.background = \"Red\";\r\n    } else if (a < b) {\r\n      document.getElementById(\"list2\").style.background = \"Green\";\r\n      document.getElementById(\"list1\").style.background = \"Red\";\r\n      dispatch(actAddCount2());\r\n    } else if (\r\n      me.max_atmosphering_speed === \"unknown\" ||\r\n      me.max_atmosphering_speed === \"n/a\" ||\r\n      machine.max_atmosphering_speed === \"unknown\" ||\r\n      machine.max_atmosphering_speed === \"n/a\"\r\n    ) {\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n    }\r\n    console.log(\r\n      \"1:\",\r\n      me.max_atmosphering_speed,\r\n      \"2: \",\r\n      machine.max_atmosphering_speed\r\n    );\r\n\r\n    console.log(\"total: \", total);\r\n    if (total === 11 && count > count2) {\r\n      dispatch(actDeleteCount());\r\n      dispatch(actDeleteCount2());\r\n      dispatch(actDeleteTotal());\r\n      dispatch(fetchData());\r\n      handleClickShow();\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      return alert(\"You win!\");\r\n    } else if (total === 11 && count < count2) {\r\n      dispatch(actDeleteCount());\r\n      dispatch(actDeleteCount2());\r\n      dispatch(actDeleteTotal());\r\n      dispatch(fetchData());\r\n      handleClickShow();\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      return alert(\"You lose!\");\r\n    } else if (total === 11 && count === count2) {\r\n      dispatch(actDeleteCount());\r\n      dispatch(actDeleteCount2());\r\n      dispatch(actDeleteTotal());\r\n      dispatch(fetchData());\r\n      handleClickShow();\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      return alert(\"Draw!Draw!\");\r\n    }\r\n  }, [me, machine]);\r\n  const handleClickReset = () => {\r\n    dispatch(fetchData());\r\n  };\r\n  return (\r\n    <div className=\"container2\">\r\n      <div className=\"header-scores\">\r\n        <span>{count}</span>\r\n        <span>{total}</span>\r\n        <span>{count2}</span>\r\n      </div>\r\n      {requesting === false ? (\r\n        <div className=\"body\">\r\n          <div className=\"body-item\">\r\n            <div className=\"body-title\" onClick={() => handleClickMe()}>\r\n              SnowsPeeders\r\n            </div>\r\n            <div className=\"body-image\">\r\n              <img src={starwars} alt=\"\" />\r\n            </div>\r\n            <div className=\"body-list\" id=\"list1\">\r\n              <div className=\"item\">\r\n                <span>Max Speed</span>\r\n                <span>{me.max_atmosphering_speed}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Credit</span>\r\n                <span>{me.cost_in_credits}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Passengers</span>\r\n                <span>{me.passengers}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Film Appearances</span>\r\n                <span>{me.films?.length}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"reset\"\r\n            style={{ marginTop: \"250px\", fontSize: \"20px\" }}\r\n            onClick={() => handleClickReset()}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className=\"body-item\">\r\n            <div className=\"body-title\" onClick={() => handleClickMachine()}>\r\n              Storm Twin cloud car\r\n            </div>\r\n            <div className=\"body-image\">\r\n              <img src={starwars} alt=\"\" />\r\n            </div>\r\n            <div className=\"body-list\" id=\"list2\">\r\n              <div className=\"item\" onClick={() => handleClickShow()}>\r\n                <span>Max Speed</span>\r\n                <span>{show ? machine.max_atmosphering_speed : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Credit</span>\r\n                <span>{show ? machine.cost_in_credits : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Passengers</span>\r\n                <span>{show ? machine.passengers : \"?\"}</span>\r\n              </div>\r\n              <div className=\"item\">\r\n                {\" \"}\r\n                <span>Film Appearances</span>\r\n                <span>{show ? machine.films?.length : \"?\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading ...................</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     data: state,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch, props) => {\r\n//   return {50\r\n//     fetchAllData: (data) => {\r\n//       dispatch(actFetchData(data));\r\n//     },\r\n//     deleteDataRedux: (id) => dispatch(actDeleteData(id)),\r\n//     addTotalRedux: () => dispatch(actAddTotal()),\r\n//     deleteTotalRedux: () => dispatch(actDeleteTotal()),\r\n//   };\r\n// };\r\n\r\nexport default ExerciseRedux;\r\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\Exercise-react-context.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\CardMe.js",["120"],[],"import React, { useContext, useEffect } from \"react\";\r\nimport starwars from \"../../image/starwars.png\";\r\nimport { ThemeContext } from \"../Context/Context\";\r\n\r\nconst CardMe = () => {\r\n  const { handleClickMe } = useContext(ThemeContext);\r\n  const { me } = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    handleClickMe();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"body-item\">\r\n      <div className=\"body-title\" onClick={handleClickMe}>\r\n        SnowsPeeders\r\n      </div>\r\n      <div className=\"body-image\">\r\n        <img src={starwars} alt=\"\" />\r\n      </div>\r\n      <div className=\"body-list\" id=\"list1\">\r\n        <div className=\"item\">\r\n          <span>Max Speed</span>\r\n          <span>{me.max_atmosphering_speed}</span>\r\n        </div>\r\n        <div className=\"item\">\r\n          {\" \"}\r\n          <span>Credit</span>\r\n          <span>{me.cost_in_credits}</span>\r\n        </div>\r\n        <div className=\"item\">\r\n          {\" \"}\r\n          <span>Passengers</span>\r\n          <span>{me.passengers}</span>\r\n        </div>\r\n        <div className=\"item\">\r\n          {\" \"}\r\n          <span>Film Appearances</span>\r\n          <span>{me.films?.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMe;\r\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\CardMachine.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Exercise-context\\Count.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\acctionTypes.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\acction.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\store.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\rootReducer.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\countReducer.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\dataReducer.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\totalReducer.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\redux\\reducer\\count2Reducer.js",[],[],"D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\views\\Context\\Context.js",["121","122"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\nconst Context = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [me, setMe] = useState({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const [machine, setMachine] = useState({});\r\n  const [count2, setCount2] = useState(0);\r\n  useEffect(() => {\r\n    try {\r\n      (async function () {\r\n        let arr = [];\r\n        let page = 1;\r\n        let res = await axios.get(\r\n          `https://swapi.dev/api/starships/?page=${page}`\r\n        );\r\n        let data = res && res.data ? res.data : [];\r\n        arr = arr.concat(data.results);\r\n        if (data.next) {\r\n          page += 1;\r\n          let res = await axios.get(\r\n            `https://swapi.dev/api/starships/?page=${page}`\r\n          );\r\n          arr = arr.concat(res.data.results);\r\n          if (data.next) {\r\n            page += 1;\r\n            let res = await axios.get(\r\n              `https://swapi.dev/api/starships/?page=${page}`\r\n            );\r\n            arr = arr.concat(res.data.results);\r\n            if (res.data.next) {\r\n              page += 1;\r\n              let res = await axios.get(\r\n                `https://swapi.dev/api/starships/?page=${page}`\r\n              );\r\n              arr = arr.concat(res.data.results);\r\n              console.log(\"array 4:\", page, arr);\r\n              setData(arr);\r\n            } else {\r\n              console.log(\"đã hết api\");\r\n              return arr;\r\n            }\r\n          }\r\n        }\r\n        setData(arr);\r\n        setLoading(false);\r\n      })();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [total === 10]);\r\n  const handleClickMe = () => {\r\n    const index1 = Math.floor(Math.random() * (data.length - 1));\r\n    setMe(data[index1]);\r\n    data.splice(index1, 1);\r\n    setTotal(total + 1);\r\n  };\r\n  const handleClickMachine = () => {\r\n    const index2 = Math.floor(Math.random() * (data.length - 1));\r\n    setMachine(data[index2]);\r\n    data.splice(index2, 1);\r\n    setTotal(total + 1);\r\n    setShow(true);\r\n  };\r\n  useEffect(() => {\r\n    let a = parseInt(me.max_atmosphering_speed);\r\n    let b = parseInt(machine.max_atmosphering_speed);\r\n    if (a > b) {\r\n      setCount(count + 1);\r\n      document.getElementById(\"list1\").style.background = \"Green\";\r\n      document.getElementById(\"list2\").style.background = \"Red\";\r\n    } else if (a < b) {\r\n      document.getElementById(\"list2\").style.background = \"Green\";\r\n      document.getElementById(\"list1\").style.background = \"Red\";\r\n      setCount2(count2 + 1);\r\n    } else if (\r\n      me.max_atmosphering_speed === \"unknown\" ||\r\n      me.max_atmosphering_speed === \"n/a\" ||\r\n      machine.max_atmosphering_speed === \"unknown\" ||\r\n      machine.max_atmosphering_speed === \"n/a\"\r\n    ) {\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      setCount(count);\r\n      setCount2(count2);\r\n    }\r\n    console.log(\r\n      \"1:\",\r\n      me.max_atmosphering_speed,\r\n      \"2: \",\r\n      machine.max_atmosphering_speed\r\n    );\r\n    console.log(\"total: \", total);\r\n    if (total === 10 && count > count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      setTotal(0);\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      return alert(\"You win! \");\r\n    } else if (total === 10 && count < count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      setTotal(0);\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      return alert(\"You lose!\");\r\n    } else if (total === 10 && count === count2) {\r\n      setCount(0);\r\n      setCount2(0);\r\n      setTotal(0);\r\n      document.getElementById(\"list2\").style.background = \"White\";\r\n      document.getElementById(\"list1\").style.background = \"White\";\r\n      return alert(\"Draw! \");\r\n    }\r\n  }, [me, machine]);\r\n  const handleClickShow = () => {\r\n    setShow(!show);\r\n  };\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        data,\r\n        total,\r\n        loading,\r\n        setTotal,\r\n        handleClickMe,\r\n        handleClickMachine,\r\n        handleClickShow,\r\n        me,\r\n        machine,\r\n        show,\r\n        count,\r\n        count2,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Context, ThemeContext };\r\n","D:\\cac ngon ngu\\ReactJs\\baitap1\\src\\services\\callAPI.js",[],[],{"ruleId":"123","severity":1,"message":"124","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":21},{"ruleId":"123","severity":1,"message":"127","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":12},{"ruleId":"123","severity":1,"message":"128","line":10,"column":17,"nodeType":"125","messageId":"126","endLine":10,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":31,"column":6,"nodeType":"131","endLine":31,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":39,"column":7,"nodeType":"134","endLine":39,"endColumn":19},{"ruleId":"123","severity":1,"message":"135","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"136","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},{"ruleId":"123","severity":1,"message":"137","line":15,"column":3,"nodeType":"125","messageId":"126","endLine":15,"endColumn":10},{"ruleId":"129","severity":1,"message":"138","line":40,"column":6,"nodeType":"131","endLine":40,"endColumn":8,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":109,"column":6,"nodeType":"131","endLine":109,"endColumn":19,"suggestions":"141"},{"ruleId":"129","severity":1,"message":"142","line":10,"column":6,"nodeType":"131","endLine":10,"endColumn":8,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"133","line":58,"column":7,"nodeType":"134","endLine":58,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":123,"column":6,"nodeType":"131","endLine":123,"endColumn":19,"suggestions":"145"},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'setTotal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'listData' and 'total'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setListData' needs the current value of 'total'.","ArrayExpression",["146"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","'axios' is defined but never used.","'connect' is defined but never used.","'callAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'count', 'count2', 'dispatch', 'handleClickShow', and 'total'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'handleClickMe'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'count', 'count2', and 'total'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["150"],{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [listData, total]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch]",{"range":"163","text":"164"},"Update the dependencies array to be: [me, machine, total, count, count2, dispatch, handleClickShow]",{"range":"165","text":"166"},"Update the dependencies array to be: [handleClickMe]",{"range":"167","text":"168"},"Update the dependencies array to be: [me, machine, total, count, count2]",{"range":"169","text":"170"},[955,957],"[listData, total]",[1246,1248],"[dispatch]",[3734,3747],"[me, machine, total, count, count2, dispatch, handleClickShow]",[330,332],"[handleClickMe]",[4197,4210],"[me, machine, total, count, count2]"]